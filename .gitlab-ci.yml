stages:
  - build
  - deploy

variables:
  IMAGE_TAG_LATEST: latest
  IMAGE_TAG_COMMIT: ${CI_COMMIT_SHORT_SHA}
  VERSION: ${CI_COMMIT_TAG}
  NAMESPACE: "tenda"
  DEPLOYMENT_NAME: "tenda-web-app"

build:
  stage: build
  image: 
    name: gcr.io/kaniko-project/executor:v1.23.2-debug
    entrypoint: [""]
  tags:
    - web-app
  only:
    - main
    - tags
  script:
    - echo "Building Docker image..."
    - echo "$VERSION"
    - echo "$IMAGE_TAG_COMMIT"
    - set -xv
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$DOCKER_REGISTRY\":{\"username\":\"$CI_BUILD_USER\",\"password\":\"$CI_BUILD_TOKEN\"}}}" > /kaniko/.docker/config.json
    - if [ -z "$VERSION" ]; then VERSION=$IMAGE_TAG_COMMIT; fi
    - /kaniko/executor --context ${CI_PROJECT_DIR} --dockerfile ${CI_PROJECT_DIR}/Dockerfile --destination ${CI_BUILD_USER}/${IMAGE_NAME}:$VERSION
    - /kaniko/executor --context ${CI_PROJECT_DIR} --dockerfile ${CI_PROJECT_DIR}/Dockerfile --destination ${CI_BUILD_USER}/${IMAGE_NAME}:${IMAGE_TAG_LATEST}

deploy:
  stage: deploy
  image: bitnami/kubectl:latest
  tags:
    - web-app
  only:
    - main
    - tags
  before_script:
    - mkdir -p /tmp/.kube # Создание директории для kubeconfig
    - echo "$KUBE_CONFIG" > /tmp/.kube/config # Установка kubeconfig
    - export KUBECONFIG=/tmp/.kube/config # Установка переменной окружения KUBECONFIG
    - kubectl version --client
  script:
    - echo "Deploying to Kubernetes..."
    - kubectl apply -f k8s/
    - if [ -z "$VERSION" ]; then VERSION=$IMAGE_TAG_COMMIT; fi
    - kubectl set image deployment/${DEPLOYMENT_NAME} ${IMAGE_NAME}=${CI_BUILD_USER}/${IMAGE_NAME}:$VERSION --namespace=${NAMESPACE}
    - kubectl rollout restart deployment/${DEPLOYMENT_NAME} --namespace=${NAMESPACE}
    - kubectl rollout status deployment/${DEPLOYMENT_NAME} --namespace=${NAMESPACE}
  when: on_success

